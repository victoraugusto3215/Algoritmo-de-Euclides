<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABUAAABuAAAAnQAAAJ0AAABvAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAZAAAAsAAAAP0AAAD/AAAA/wAAAP4AAACwAAAAGQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAwgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AMEAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADLAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAywAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAJ8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACiAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAA
        AOMAAAD/AAAA/wAAAP8AAAD/AAAA4wAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAQwAAALoAAADqAAAA6wAAALoAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAACwAAAAtAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAHQAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAdAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAA
        AK8AAADfAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAN8AAACvAAAALQAAAAAAAAAAAAAAAAAA
        AAAAAACOAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACSAAAAAAAA
        AAAAAAAAAAAAAwAAAKcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKcAAAADAAAAAAAAAAAAAAADAAAApwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAApwAAAAMAAAAAAAAAAAAAAAAAAACOAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACSAAAAAAAAAAAAAAAAAAAAAAAAACoAAACuAAAA3wAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAAOEAAADfAAAArgAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAdAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB0AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAAsAAAALQAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAvQAA
        AOoAAADrAAAAvQAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAA
        AOMAAAD/AAAA/wAAAP8AAAD/AAAA4wAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAACiAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAApQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEQAAAMwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADMAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMAAAAwQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMEAAAAMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAggAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAACwAAAA/QAAAP8AAAD/AAAA/gAA
        ALAAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAABnAAAAmwAA
        AJsAAABnAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////+f///+B////AP///wD///4Af//+AH///gB///8A////gf///8
        P///////4AAAB8AAAAPAAAADgAAAAYAAAAHAAAADwAAAA+AAAAf///////w////4H///8A///+AH///g
        B///4Af///AP///wD///+B////5///////8=
</value>
  </data>
</root>